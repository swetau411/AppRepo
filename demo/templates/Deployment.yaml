apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: tomcat-web
  namespace:  default
  labels:
    app: tomcat-web
    service: tomcat-web    ###ServiceName
    env: nonprod
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      name: tomcat-web
      namespace: default     ## Kubernets namespace
      annotations:
        imagelabel: latest
      labels:
        app: tomcat-web
        service: tomcat-web
        env: nonprod
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 5
              podAffinityTerm:
                namespaces:
                  - default
                topologyKey: failure-domain.beta.kubernetes.io/zone
                labelSelector:
                  matchLabels:
                    app: tomcat-web
                    service: tomcat-web     # K8s ServiceName
                    env: nonprod
      containers:
        - envFrom:
          image: docker.io/chennaraov/tomcat-web:latest   #docker hub Docker Image repo link
          imagePullPolicy: Always
          livenessProbe:
            tcpSocket:
              port: 8080
            failureThreshold: 3
            successThreshold: 1
            initialDelaySeconds: 15
            timeoutSeconds: 2
          name: tomcat-web
          ports:
            - name: http
              containerPort: 8080
apiVersion: v1
kind: Service
metadata:
  name: tomcat-web
  namespace: default    # Kubernets namespace
  labels:
    app: tomcat-web
    service: tomcat-web
    env: nonprod
spec:
  selector:
    app: tomcat-web
    service: tomcat-web
    env: nonprod
  ports:
    - name: http
      port: 8080
      targetPort: 8080
      protocol: TCP
